image: node:11.15.0

stages:
  - install
  - quality
  - generate
  - deploy

include:
  - template: Code-Quality.gitlab-ci.yml

install:
   stage: install
   script:
      - npm install
   artifacts:
      name: "artifacts"
      untracked: true
      expire_in: 30 mins
      paths:
        - .npm/
        - node_modules/

linting:
  stage: quality
  script:
    - npm run lintfix
  dependencies:
    - install

tests:
  stage: quality
  script:
    - cd functions
    - npm install
    - cd ..
    - npm run test
  dependencies:
    - install
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

code_quality:
  stage: quality
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker info
    - docker run 
      --env CODECLIMATE_DEBUG=1 
      --env CODECLIMATE_CODE="$PWD" 
      --volume "$PWD":/code 
      --volume /var/run/docker.sock:/var/run/docker.sock 
      --volume /tmp/cc:/tmp/cc 
      codeclimate/codeclimate:0.85.2 analyze -f html > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
    expire_in: 10 weeks
  dependencies:
    - install
  except:
    variables:
      - $CODE_QUALITY_DISABLED

staging-build:
  stage: generate
  only:
  - staging
  script:
    - npm install
    - npm run generate
  artifacts:
    expire_in: 1 week
    paths:
      - dist
  dependencies:
    - linting
    - tests

production-build:
  stage: generate
  only:
  - master
  script:
    - npm run prod-switch
    - npm run generate
  artifacts:
    expire_in: 1 week
    paths:
      - dist
  dependencies:
    - linting
    - tests

staging-deploy:
  stage: deploy
  only:
    - staging
  script:
    - npm install -g firebase-tools
    - cd functions && npm install && cd -
    - firebase use --token FIREBASE_TOKEN default
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token FIREBASE_TOKEN
  dependencies:
    - staging-build

production-deploy:
  stage: deploy
  only:
    - master
  script:
    - npm install -g firebase-tools
    - cd functions && npm install && cd -
    - firebase use production --token FIREBASE_TOKEN
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token FIREBASE_TOKEN
  dependencies:
    - production-build
